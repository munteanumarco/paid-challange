"""Add Gmail accounts support

Revision ID: f6c5ef922a22
Revises: 0e4d084ea1d1
Create Date: 2025-08-02 05:19:26.094434

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f6c5ef922a22'
down_revision: Union[str, Sequence[str], None] = '0e4d084ea1d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gmail_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expiry', sa.DateTime(), nullable=True),
    sa.Column('last_sync_time', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('google_id')
    )
    op.create_index(op.f('ix_gmail_accounts_email'), 'gmail_accounts', ['email'], unique=True)
    op.create_index(op.f('ix_gmail_accounts_id'), 'gmail_accounts', ['id'], unique=False)
    op.add_column('emails', sa.Column('gmail_account_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'emails', 'gmail_accounts', ['gmail_account_id'], ['id'])
    op.drop_constraint(op.f('users_google_id_key'), 'users', type_='unique')
    op.drop_column('users', 'refresh_token')
    op.drop_column('users', 'last_sync_time')
    op.drop_column('users', 'google_id')
    op.drop_column('users', 'access_token')
    op.drop_column('users', 'token_expiry')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('token_expiry', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('access_token', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('google_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('last_sync_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('refresh_token', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('users_google_id_key'), 'users', ['google_id'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(None, 'emails', type_='foreignkey')
    op.drop_column('emails', 'gmail_account_id')
    op.drop_index(op.f('ix_gmail_accounts_id'), table_name='gmail_accounts')
    op.drop_index(op.f('ix_gmail_accounts_email'), table_name='gmail_accounts')
    op.drop_table('gmail_accounts')
    # ### end Alembic commands ###
